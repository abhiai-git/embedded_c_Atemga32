
newshapes.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005ec  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 00000081  00000000  00000000  00000660  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000be2  00000000  00000000  000006e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000019e  00000000  00000000  000012c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000a34  00000000  00000000  00001461  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  000000a0  00000000  00000000  00001e98  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000fe  00000000  00000000  00001f38  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000005ca  00000000  00000000  00002036  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000048  00000000  00000000  00002600  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ee       	ldi	r30, 0xEC	; 236
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 bc 00 	call	0x178	; 0x178 <main>
  8a:	0c 94 f4 02 	jmp	0x5e8	; 0x5e8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LCD_cmd>:
{
	dis_cmd(0X01);
}

void LCD_cmd(unsigned char item)
{
  92:	82 bb       	out	0x12, r24	; 18
	PORTD=item;
	PORTD &=~(1<<RS);
  94:	90 98       	cbi	0x12, 0	; 18
	PORTD &=~(1<<RW);
  96:	91 98       	cbi	0x12, 1	; 18
	PORTD |= (1<<EN);
  98:	92 9a       	sbi	0x12, 2	; 18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  9a:	8a ef       	ldi	r24, 0xFA	; 250
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	01 97       	sbiw	r24, 0x01	; 1
  a0:	f1 f7       	brne	.-4      	; 0x9e <LCD_cmd+0xc>
	_delay_ms(1);
	PORTD &= ~(1<<EN);
  a2:	92 98       	cbi	0x12, 2	; 18
}
  a4:	08 95       	ret

000000a6 <LCD_data>:

void LCD_data(unsigned char item)
{
  a6:	82 bb       	out	0x12, r24	; 18
	PORTD=item;
	PORTD |= (1<<RS);
  a8:	90 9a       	sbi	0x12, 0	; 18
	PORTD &=~(1<<RW);
  aa:	91 98       	cbi	0x12, 1	; 18
	PORTD |= (1<<EN);
  ac:	92 9a       	sbi	0x12, 2	; 18
  ae:	8a ef       	ldi	r24, 0xFA	; 250
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	01 97       	sbiw	r24, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <LCD_data+0xc>
	_delay_ms(1);
	PORTD &= ~(1<<EN);
  b6:	92 98       	cbi	0x12, 2	; 18
}
  b8:	08 95       	ret

000000ba <dis_data>:

void dis_data(unsigned char item)
{
  ba:	28 2f       	mov	r18, r24
  bc:	20 7f       	andi	r18, 0xF0	; 240
	PORTD &= ~(1<<EN);
}

void LCD_data(unsigned char item)
{
	PORTD=item;
  be:	22 bb       	out	0x12, r18	; 18
	PORTD |= (1<<RS);
  c0:	90 9a       	sbi	0x12, 0	; 18
	PORTD &=~(1<<RW);
  c2:	91 98       	cbi	0x12, 1	; 18
	PORTD |= (1<<EN);
  c4:	92 9a       	sbi	0x12, 2	; 18
  c6:	2a ef       	ldi	r18, 0xFA	; 250
  c8:	30 e0       	ldi	r19, 0x00	; 0
  ca:	f9 01       	movw	r30, r18
  cc:	31 97       	sbiw	r30, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <dis_data+0x12>
	_delay_ms(1);
	PORTD &= ~(1<<EN);
  d0:	92 98       	cbi	0x12, 2	; 18
  d2:	f9 01       	movw	r30, r18
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <dis_data+0x1a>
{
	unsigned char value;
	value = item & 0XF0;
	LCD_data(value);
	_delay_ms(1);
	value=(item << 4) & 0xF0;
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	44 e0       	ldi	r20, 0x04	; 4
  dc:	88 0f       	add	r24, r24
  de:	99 1f       	adc	r25, r25
  e0:	4a 95       	dec	r20
  e2:	e1 f7       	brne	.-8      	; 0xdc <dis_data+0x22>
	PORTD &= ~(1<<EN);
}

void LCD_data(unsigned char item)
{
	PORTD=item;
  e4:	82 bb       	out	0x12, r24	; 18
	PORTD |= (1<<RS);
  e6:	90 9a       	sbi	0x12, 0	; 18
	PORTD &=~(1<<RW);
  e8:	91 98       	cbi	0x12, 1	; 18
	PORTD |= (1<<EN);
  ea:	92 9a       	sbi	0x12, 2	; 18
  ec:	c9 01       	movw	r24, r18
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <dis_data+0x34>
	_delay_ms(1);
	PORTD &= ~(1<<EN);
  f2:	92 98       	cbi	0x12, 2	; 18
	value = item & 0XF0;
	LCD_data(value);
	_delay_ms(1);
	value=(item << 4) & 0xF0;
	LCD_data(value);
}
  f4:	08 95       	ret

000000f6 <dis_cmd>:

void dis_cmd(unsigned char item)
{
  f6:	28 2f       	mov	r18, r24
  f8:	20 7f       	andi	r18, 0xF0	; 240
	dis_cmd(0X01);
}

void LCD_cmd(unsigned char item)
{
	PORTD=item;
  fa:	22 bb       	out	0x12, r18	; 18
	PORTD &=~(1<<RS);
  fc:	90 98       	cbi	0x12, 0	; 18
	PORTD &=~(1<<RW);
  fe:	91 98       	cbi	0x12, 1	; 18
	PORTD |= (1<<EN);
 100:	92 9a       	sbi	0x12, 2	; 18
 102:	2a ef       	ldi	r18, 0xFA	; 250
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	f9 01       	movw	r30, r18
 108:	31 97       	sbiw	r30, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <dis_cmd+0x12>
	_delay_ms(1);
	PORTD &= ~(1<<EN);
 10c:	92 98       	cbi	0x12, 2	; 18
 10e:	f9 01       	movw	r30, r18
 110:	31 97       	sbiw	r30, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <dis_cmd+0x1a>
{
	unsigned char value;
	value = item & 0XF0;
	LCD_cmd(value);
	_delay_ms(1);
	value=(item << 4) & 0xF0;
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	54 e0       	ldi	r21, 0x04	; 4
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	5a 95       	dec	r21
 11e:	e1 f7       	brne	.-8      	; 0x118 <dis_cmd+0x22>
	dis_cmd(0X01);
}

void LCD_cmd(unsigned char item)
{
	PORTD=item;
 120:	82 bb       	out	0x12, r24	; 18
	PORTD &=~(1<<RS);
 122:	90 98       	cbi	0x12, 0	; 18
	PORTD &=~(1<<RW);
 124:	91 98       	cbi	0x12, 1	; 18
	PORTD |= (1<<EN);
 126:	92 9a       	sbi	0x12, 2	; 18
 128:	c9 01       	movw	r24, r18
 12a:	01 97       	sbiw	r24, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <dis_cmd+0x34>
	_delay_ms(1);
	PORTD &= ~(1<<EN);
 12e:	92 98       	cbi	0x12, 2	; 18
	value = item & 0XF0;
	LCD_cmd(value);
	_delay_ms(1);
	value=(item << 4) & 0xF0;
	LCD_cmd(value);
}
 130:	08 95       	ret

00000132 <LCD_clr>:


	return 0;
}
void LCD_clr(void)
{
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
	dis_cmd(0X01);
}
 138:	08 95       	ret

0000013a <LCD_init>:
	value=(item << 4) & 0xF0;
	LCD_cmd(value);
}

void LCD_init()
{
 13a:	0f 93       	push	r16
 13c:	1f 93       	push	r17
	dis_cmd(0x02);
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
	dis_cmd(0x28);
 144:	88 e2       	ldi	r24, 0x28	; 40
 146:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
 14a:	0a ef       	ldi	r16, 0xFA	; 250
 14c:	10 e0       	ldi	r17, 0x00	; 0
 14e:	c8 01       	movw	r24, r16
 150:	01 97       	sbiw	r24, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <LCD_init+0x16>
	_delay_ms(1);
	//dis_cmd(0x01);
	_delay_ms(1);
	dis_cmd(0x0C);
 154:	c8 01       	movw	r24, r16
 156:	01 97       	sbiw	r24, 0x01	; 1
 158:	f1 f7       	brne	.-4      	; 0x156 <LCD_init+0x1c>
 15a:	8c e0       	ldi	r24, 0x0C	; 12
 15c:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
 160:	c8 01       	movw	r24, r16
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <LCD_init+0x28>
	_delay_ms(1);
	dis_cmd(0X06);
 166:	86 e0       	ldi	r24, 0x06	; 6
 168:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
	dis_cmd(0x80);
 16c:	80 e8       	ldi	r24, 0x80	; 128
 16e:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
	
}
 172:	1f 91       	pop	r17
 174:	0f 91       	pop	r16
 176:	08 95       	ret

00000178 <main>:
void LCD_init(void);
void LCD_string(unsigned char *);
void LCD_num(unsigned int);

int main()
{	DDRD=0b11111111;	
 178:	cf 93       	push	r28
 17a:	df 93       	push	r29
 17c:	8f ef       	ldi	r24, 0xFF	; 255
 17e:	81 bb       	out	0x11, r24	; 17
	LCD_init();
 180:	0e 94 9d 00 	call	0x13a	; 0x13a <LCD_init>
 184:	c9 e1       	ldi	r28, 0x19	; 25
 186:	d0 e0       	ldi	r29, 0x00	; 0
//dis_cmd(0x01);

	while(1)
	{	
		dis_cmd(0x50);
 188:	80 e5       	ldi	r24, 0x50	; 80
 18a:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0x1f);
 18e:	8f e1       	ldi	r24, 0x1F	; 31
 190:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 194:	88 e2       	ldi	r24, 0x28	; 40
 196:	93 e2       	ldi	r25, 0x23	; 35
 198:	fe 01       	movw	r30, r28
 19a:	31 97       	sbiw	r30, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <main+0x22>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 19e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1a0:	d9 f7       	brne	.-10     	; 0x198 <main+0x20>
		_delay_ms(900);
		dis_data(0x1f);
 1a2:	8f e1       	ldi	r24, 0x1F	; 31
 1a4:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 1a8:	88 e2       	ldi	r24, 0x28	; 40
 1aa:	93 e2       	ldi	r25, 0x23	; 35
 1ac:	fe 01       	movw	r30, r28
 1ae:	31 97       	sbiw	r30, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <main+0x36>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1b2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1b4:	d9 f7       	brne	.-10     	; 0x1ac <main+0x34>
		_delay_ms(900);
		dis_data(0x1f);
 1b6:	8f e1       	ldi	r24, 0x1F	; 31
 1b8:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 1bc:	88 e2       	ldi	r24, 0x28	; 40
 1be:	93 e2       	ldi	r25, 0x23	; 35
 1c0:	fe 01       	movw	r30, r28
 1c2:	31 97       	sbiw	r30, 0x01	; 1
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <main+0x4a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1c6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1c8:	d9 f7       	brne	.-10     	; 0x1c0 <main+0x48>
		_delay_ms(900);
		dis_data(0x1f);
 1ca:	8f e1       	ldi	r24, 0x1F	; 31
 1cc:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 1d0:	88 e2       	ldi	r24, 0x28	; 40
 1d2:	93 e2       	ldi	r25, 0x23	; 35
 1d4:	fe 01       	movw	r30, r28
 1d6:	31 97       	sbiw	r30, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <main+0x5e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1da:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1dc:	d9 f7       	brne	.-10     	; 0x1d4 <main+0x5c>
		_delay_ms(900);
		dis_data(0x1f);
 1de:	8f e1       	ldi	r24, 0x1F	; 31
 1e0:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 1e4:	88 e2       	ldi	r24, 0x28	; 40
 1e6:	93 e2       	ldi	r25, 0x23	; 35
 1e8:	fe 01       	movw	r30, r28
 1ea:	31 97       	sbiw	r30, 0x01	; 1
 1ec:	f1 f7       	brne	.-4      	; 0x1ea <main+0x72>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1ee:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1f0:	d9 f7       	brne	.-10     	; 0x1e8 <main+0x70>
		_delay_ms(900);
		dis_data(0x1f);
 1f2:	8f e1       	ldi	r24, 0x1F	; 31
 1f4:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 1f8:	88 e2       	ldi	r24, 0x28	; 40
 1fa:	93 e2       	ldi	r25, 0x23	; 35
 1fc:	fe 01       	movw	r30, r28
 1fe:	31 97       	sbiw	r30, 0x01	; 1
 200:	f1 f7       	brne	.-4      	; 0x1fe <main+0x86>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 202:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 204:	d9 f7       	brne	.-10     	; 0x1fc <main+0x84>
		_delay_ms(900);
		dis_data(0x1f);
 206:	8f e1       	ldi	r24, 0x1F	; 31
 208:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 20c:	88 e2       	ldi	r24, 0x28	; 40
 20e:	93 e2       	ldi	r25, 0x23	; 35
 210:	fe 01       	movw	r30, r28
 212:	31 97       	sbiw	r30, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <main+0x9a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 216:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 218:	d9 f7       	brne	.-10     	; 0x210 <main+0x98>
		_delay_ms(900);
		dis_cmd(0x80);
 21a:	80 e8       	ldi	r24, 0x80	; 128
 21c:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0);
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 226:	88 e2       	ldi	r24, 0x28	; 40
 228:	93 e2       	ldi	r25, 0x23	; 35
 22a:	fe 01       	movw	r30, r28
 22c:	31 97       	sbiw	r30, 0x01	; 1
 22e:	f1 f7       	brne	.-4      	; 0x22c <main+0xb4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 230:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 232:	d9 f7       	brne	.-10     	; 0x22a <main+0xb2>

		_delay_ms(900);
		dis_cmd(0x48);
 234:	88 e4       	ldi	r24, 0x48	; 72
 236:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0x1f);
 23a:	8f e1       	ldi	r24, 0x1F	; 31
 23c:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 240:	88 e2       	ldi	r24, 0x28	; 40
 242:	93 e2       	ldi	r25, 0x23	; 35
 244:	fe 01       	movw	r30, r28
 246:	31 97       	sbiw	r30, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <main+0xce>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 24a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 24c:	d9 f7       	brne	.-10     	; 0x244 <main+0xcc>
		_delay_ms(900);
		dis_data(0x1f);
 24e:	8f e1       	ldi	r24, 0x1F	; 31
 250:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 254:	88 e2       	ldi	r24, 0x28	; 40
 256:	93 e2       	ldi	r25, 0x23	; 35
 258:	fe 01       	movw	r30, r28
 25a:	31 97       	sbiw	r30, 0x01	; 1
 25c:	f1 f7       	brne	.-4      	; 0x25a <main+0xe2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 25e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 260:	d9 f7       	brne	.-10     	; 0x258 <main+0xe0>
		_delay_ms(900);
		dis_data(0x1f);
 262:	8f e1       	ldi	r24, 0x1F	; 31
 264:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 268:	88 e2       	ldi	r24, 0x28	; 40
 26a:	93 e2       	ldi	r25, 0x23	; 35
 26c:	fe 01       	movw	r30, r28
 26e:	31 97       	sbiw	r30, 0x01	; 1
 270:	f1 f7       	brne	.-4      	; 0x26e <main+0xf6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 272:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 274:	d9 f7       	brne	.-10     	; 0x26c <main+0xf4>
		_delay_ms(900);
		dis_data(0x1f);
 276:	8f e1       	ldi	r24, 0x1F	; 31
 278:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 27c:	88 e2       	ldi	r24, 0x28	; 40
 27e:	93 e2       	ldi	r25, 0x23	; 35
 280:	fe 01       	movw	r30, r28
 282:	31 97       	sbiw	r30, 0x01	; 1
 284:	f1 f7       	brne	.-4      	; 0x282 <main+0x10a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 286:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 288:	d9 f7       	brne	.-10     	; 0x280 <main+0x108>
		_delay_ms(900);
		dis_data(0x1f);
 28a:	8f e1       	ldi	r24, 0x1F	; 31
 28c:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 290:	8f ef       	ldi	r24, 0xFF	; 255
 292:	9f ef       	ldi	r25, 0xFF	; 255
 294:	fe 01       	movw	r30, r28
 296:	31 97       	sbiw	r30, 0x01	; 1
 298:	f1 f7       	brne	.-4      	; 0x296 <main+0x11e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 29a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 29c:	d9 f7       	brne	.-10     	; 0x294 <main+0x11c>
		_delay_ms(9000);
		dis_data(0x1f);
 29e:	8f e1       	ldi	r24, 0x1F	; 31
 2a0:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 2a4:	8f ef       	ldi	r24, 0xFF	; 255
 2a6:	9f ef       	ldi	r25, 0xFF	; 255
 2a8:	fe 01       	movw	r30, r28
 2aa:	31 97       	sbiw	r30, 0x01	; 1
 2ac:	f1 f7       	brne	.-4      	; 0x2aa <main+0x132>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2ae:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2b0:	d9 f7       	brne	.-10     	; 0x2a8 <main+0x130>
		_delay_ms(9000);
		dis_data(0x1f);
 2b2:	8f e1       	ldi	r24, 0x1F	; 31
 2b4:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 2b8:	8f ef       	ldi	r24, 0xFF	; 255
 2ba:	9f ef       	ldi	r25, 0xFF	; 255
 2bc:	fe 01       	movw	r30, r28
 2be:	31 97       	sbiw	r30, 0x01	; 1
 2c0:	f1 f7       	brne	.-4      	; 0x2be <main+0x146>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2c2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2c4:	d9 f7       	brne	.-10     	; 0x2bc <main+0x144>
		_delay_ms(9000);
		dis_cmd(0x81);
 2c6:	81 e8       	ldi	r24, 0x81	; 129
 2c8:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0);
 2cc:	80 e0       	ldi	r24, 0x00	; 0
 2ce:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 2d2:	8f ef       	ldi	r24, 0xFF	; 255
 2d4:	9f ef       	ldi	r25, 0xFF	; 255
 2d6:	fe 01       	movw	r30, r28
 2d8:	31 97       	sbiw	r30, 0x01	; 1
 2da:	f1 f7       	brne	.-4      	; 0x2d8 <main+0x160>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2dc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2de:	d9 f7       	brne	.-10     	; 0x2d6 <main+0x15e>

		_delay_ms(9000);
		dis_cmd(0x48);
 2e0:	88 e4       	ldi	r24, 0x48	; 72
 2e2:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0x1f);
 2e6:	8f e1       	ldi	r24, 0x1F	; 31
 2e8:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 2ec:	8f e1       	ldi	r24, 0x1F	; 31
 2ee:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 2f2:	8f e1       	ldi	r24, 0x1F	; 31
 2f4:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 2f8:	8f e1       	ldi	r24, 0x1F	; 31
 2fa:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 2fe:	8f e1       	ldi	r24, 0x1F	; 31
 300:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 304:	8f e1       	ldi	r24, 0x1F	; 31
 306:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 30a:	8f e1       	ldi	r24, 0x1F	; 31
 30c:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_cmd(0x82);
 310:	82 e8       	ldi	r24, 0x82	; 130
 312:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0);
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 31c:	8f ef       	ldi	r24, 0xFF	; 255
 31e:	9f ef       	ldi	r25, 0xFF	; 255
 320:	fe 01       	movw	r30, r28
 322:	31 97       	sbiw	r30, 0x01	; 1
 324:	f1 f7       	brne	.-4      	; 0x322 <main+0x1aa>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 326:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 328:	d9 f7       	brne	.-10     	; 0x320 <main+0x1a8>
	
		_delay_ms(9000);
		dis_cmd(0x48);
 32a:	88 e4       	ldi	r24, 0x48	; 72
 32c:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0x1f);
 330:	8f e1       	ldi	r24, 0x1F	; 31
 332:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 336:	8f e1       	ldi	r24, 0x1F	; 31
 338:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 33c:	8f e1       	ldi	r24, 0x1F	; 31
 33e:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 342:	8f e1       	ldi	r24, 0x1F	; 31
 344:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 348:	8f e1       	ldi	r24, 0x1F	; 31
 34a:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 34e:	8f e1       	ldi	r24, 0x1F	; 31
 350:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 354:	8f e1       	ldi	r24, 0x1F	; 31
 356:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_cmd(0x83);
 35a:	83 e8       	ldi	r24, 0x83	; 131
 35c:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0);
 360:	80 e0       	ldi	r24, 0x00	; 0
 362:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 366:	8f ef       	ldi	r24, 0xFF	; 255
 368:	9f ef       	ldi	r25, 0xFF	; 255
 36a:	fe 01       	movw	r30, r28
 36c:	31 97       	sbiw	r30, 0x01	; 1
 36e:	f1 f7       	brne	.-4      	; 0x36c <main+0x1f4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 370:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 372:	d9 f7       	brne	.-10     	; 0x36a <main+0x1f2>

			_delay_ms(9000);
		dis_cmd(0x48);
 374:	88 e4       	ldi	r24, 0x48	; 72
 376:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0x1f);
 37a:	8f e1       	ldi	r24, 0x1F	; 31
 37c:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 380:	8f e1       	ldi	r24, 0x1F	; 31
 382:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 386:	8f e1       	ldi	r24, 0x1F	; 31
 388:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 38c:	8f e1       	ldi	r24, 0x1F	; 31
 38e:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 392:	8f e1       	ldi	r24, 0x1F	; 31
 394:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 398:	8f e1       	ldi	r24, 0x1F	; 31
 39a:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 39e:	8f e1       	ldi	r24, 0x1F	; 31
 3a0:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_cmd(0x84);
 3a4:	84 e8       	ldi	r24, 0x84	; 132
 3a6:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0);
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 3b0:	8f ef       	ldi	r24, 0xFF	; 255
 3b2:	9f ef       	ldi	r25, 0xFF	; 255
 3b4:	fe 01       	movw	r30, r28
 3b6:	31 97       	sbiw	r30, 0x01	; 1
 3b8:	f1 f7       	brne	.-4      	; 0x3b6 <main+0x23e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3ba:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3bc:	d9 f7       	brne	.-10     	; 0x3b4 <main+0x23c>

		
			_delay_ms(9000);
		dis_cmd(0x48);
 3be:	88 e4       	ldi	r24, 0x48	; 72
 3c0:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0x1f);
 3c4:	8f e1       	ldi	r24, 0x1F	; 31
 3c6:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 3ca:	8f e1       	ldi	r24, 0x1F	; 31
 3cc:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 3d0:	8f e1       	ldi	r24, 0x1F	; 31
 3d2:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 3d6:	8f e1       	ldi	r24, 0x1F	; 31
 3d8:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 3dc:	8f e1       	ldi	r24, 0x1F	; 31
 3de:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 3e2:	8f e1       	ldi	r24, 0x1F	; 31
 3e4:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 3e8:	8f e1       	ldi	r24, 0x1F	; 31
 3ea:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_cmd(0x85);
 3ee:	85 e8       	ldi	r24, 0x85	; 133
 3f0:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0);
 3f4:	80 e0       	ldi	r24, 0x00	; 0
 3f6:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 3fa:	8f ef       	ldi	r24, 0xFF	; 255
 3fc:	9f ef       	ldi	r25, 0xFF	; 255
 3fe:	fe 01       	movw	r30, r28
 400:	31 97       	sbiw	r30, 0x01	; 1
 402:	f1 f7       	brne	.-4      	; 0x400 <main+0x288>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 404:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 406:	d9 f7       	brne	.-10     	; 0x3fe <main+0x286>

		
			_delay_ms(9000);
		dis_cmd(0x48);
 408:	88 e4       	ldi	r24, 0x48	; 72
 40a:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0x1f);
 40e:	8f e1       	ldi	r24, 0x1F	; 31
 410:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 414:	8f e1       	ldi	r24, 0x1F	; 31
 416:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 41a:	8f e1       	ldi	r24, 0x1F	; 31
 41c:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 420:	8f e1       	ldi	r24, 0x1F	; 31
 422:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 426:	8f e1       	ldi	r24, 0x1F	; 31
 428:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 42c:	8f e1       	ldi	r24, 0x1F	; 31
 42e:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 432:	8f e1       	ldi	r24, 0x1F	; 31
 434:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_cmd(0x86);
 438:	86 e8       	ldi	r24, 0x86	; 134
 43a:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0);
 43e:	80 e0       	ldi	r24, 0x00	; 0
 440:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 444:	8f ef       	ldi	r24, 0xFF	; 255
 446:	9f ef       	ldi	r25, 0xFF	; 255
 448:	fe 01       	movw	r30, r28
 44a:	31 97       	sbiw	r30, 0x01	; 1
 44c:	f1 f7       	brne	.-4      	; 0x44a <main+0x2d2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 44e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 450:	d9 f7       	brne	.-10     	; 0x448 <main+0x2d0>

		
			_delay_ms(9000);
		dis_cmd(0x48);
 452:	88 e4       	ldi	r24, 0x48	; 72
 454:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0x1f);
 458:	8f e1       	ldi	r24, 0x1F	; 31
 45a:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 45e:	8f e1       	ldi	r24, 0x1F	; 31
 460:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 464:	8f e1       	ldi	r24, 0x1F	; 31
 466:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 46a:	8f e1       	ldi	r24, 0x1F	; 31
 46c:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 470:	8f e1       	ldi	r24, 0x1F	; 31
 472:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 476:	8f e1       	ldi	r24, 0x1F	; 31
 478:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 47c:	8f e1       	ldi	r24, 0x1F	; 31
 47e:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_cmd(0x87);
 482:	87 e8       	ldi	r24, 0x87	; 135
 484:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0);
 488:	80 e0       	ldi	r24, 0x00	; 0
 48a:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 48e:	8f ef       	ldi	r24, 0xFF	; 255
 490:	9f ef       	ldi	r25, 0xFF	; 255
 492:	fe 01       	movw	r30, r28
 494:	31 97       	sbiw	r30, 0x01	; 1
 496:	f1 f7       	brne	.-4      	; 0x494 <__stack+0x35>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 498:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 49a:	d9 f7       	brne	.-10     	; 0x492 <__stack+0x33>

		
			_delay_ms(9000);
		dis_cmd(0x48);
 49c:	88 e4       	ldi	r24, 0x48	; 72
 49e:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0x1f);
 4a2:	8f e1       	ldi	r24, 0x1F	; 31
 4a4:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 4a8:	8f e1       	ldi	r24, 0x1F	; 31
 4aa:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 4ae:	8f e1       	ldi	r24, 0x1F	; 31
 4b0:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 4b4:	8f e1       	ldi	r24, 0x1F	; 31
 4b6:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 4ba:	8f e1       	ldi	r24, 0x1F	; 31
 4bc:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 4c0:	8f e1       	ldi	r24, 0x1F	; 31
 4c2:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 4c6:	8f e1       	ldi	r24, 0x1F	; 31
 4c8:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_cmd(0x88);
 4cc:	88 e8       	ldi	r24, 0x88	; 136
 4ce:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0);
 4d2:	80 e0       	ldi	r24, 0x00	; 0
 4d4:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 4d8:	8f ef       	ldi	r24, 0xFF	; 255
 4da:	9f ef       	ldi	r25, 0xFF	; 255
 4dc:	fe 01       	movw	r30, r28
 4de:	31 97       	sbiw	r30, 0x01	; 1
 4e0:	f1 f7       	brne	.-4      	; 0x4de <__stack+0x7f>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4e2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 4e4:	d9 f7       	brne	.-10     	; 0x4dc <__stack+0x7d>

		
			_delay_ms(9000);
		dis_cmd(0x48);
 4e6:	88 e4       	ldi	r24, 0x48	; 72
 4e8:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0x1f);
 4ec:	8f e1       	ldi	r24, 0x1F	; 31
 4ee:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 4f2:	8f e1       	ldi	r24, 0x1F	; 31
 4f4:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 4f8:	8f e1       	ldi	r24, 0x1F	; 31
 4fa:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 4fe:	8f e1       	ldi	r24, 0x1F	; 31
 500:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 504:	8f e1       	ldi	r24, 0x1F	; 31
 506:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 50a:	8f e1       	ldi	r24, 0x1F	; 31
 50c:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 510:	8f e1       	ldi	r24, 0x1F	; 31
 512:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_cmd(0x89);
 516:	89 e8       	ldi	r24, 0x89	; 137
 518:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0);
 51c:	80 e0       	ldi	r24, 0x00	; 0
 51e:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 522:	8f ef       	ldi	r24, 0xFF	; 255
 524:	9f ef       	ldi	r25, 0xFF	; 255
 526:	fe 01       	movw	r30, r28
 528:	31 97       	sbiw	r30, 0x01	; 1
 52a:	f1 f7       	brne	.-4      	; 0x528 <__stack+0xc9>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 52c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 52e:	d9 f7       	brne	.-10     	; 0x526 <__stack+0xc7>
		
			_delay_ms(9000);
		dis_cmd(0x48);
 530:	88 e4       	ldi	r24, 0x48	; 72
 532:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0x1f);
 536:	8f e1       	ldi	r24, 0x1F	; 31
 538:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 53c:	8f e1       	ldi	r24, 0x1F	; 31
 53e:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 542:	8f e1       	ldi	r24, 0x1F	; 31
 544:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 548:	8f e1       	ldi	r24, 0x1F	; 31
 54a:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 54e:	8f e1       	ldi	r24, 0x1F	; 31
 550:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 554:	8f e1       	ldi	r24, 0x1F	; 31
 556:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_data(0x1f);
 55a:	8f e1       	ldi	r24, 0x1F	; 31
 55c:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		dis_cmd(0x8a);
 560:	8a e8       	ldi	r24, 0x8A	; 138
 562:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
		dis_data(0);
 566:	80 e0       	ldi	r24, 0x00	; 0
 568:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
 56c:	0d ce       	rjmp	.-998    	; 0x188 <main+0x10>

0000056e <LCD_string>:
	dis_cmd(0x80);
	
}

void LCD_string(unsigned char *str)
{
 56e:	cf 93       	push	r28
 570:	df 93       	push	r29
 572:	ec 01       	movw	r28, r24
 574:	02 c0       	rjmp	.+4      	; 0x57a <LCD_string+0xc>
	unsigned int x=0;
	
	while(str[x]!='\0')
	{
	dis_data(str[x]);
 576:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>

void LCD_string(unsigned char *str)
{
	unsigned int x=0;
	
	while(str[x]!='\0')
 57a:	89 91       	ld	r24, Y+
 57c:	88 23       	and	r24, r24
 57e:	d9 f7       	brne	.-10     	; 0x576 <LCD_string+0x8>
	{
	dis_data(str[x]);
	x++;
	}
}
 580:	df 91       	pop	r29
 582:	cf 91       	pop	r28
 584:	08 95       	ret

00000586 <LCD_num>:
void LCD_num(unsigned int data)
{
 586:	cf 93       	push	r28
 588:	df 93       	push	r29
 58a:	ec 01       	movw	r28, r24
unsigned int val;
dis_cmd(0x04);
 58c:	84 e0       	ldi	r24, 0x04	; 4
 58e:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
 592:	0e c0       	rjmp	.+28     	; 0x5b0 <LCD_num+0x2a>
	while(data!=0)
	{
		val=data%10;
		dis_data(val+48);
 594:	ce 01       	movw	r24, r28
 596:	6a e0       	ldi	r22, 0x0A	; 10
 598:	70 e0       	ldi	r23, 0x00	; 0
 59a:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__udivmodhi4>
 59e:	80 5d       	subi	r24, 0xD0	; 208
 5a0:	0e 94 5d 00 	call	0xba	; 0xba <dis_data>
		data=data/10;
 5a4:	ce 01       	movw	r24, r28
 5a6:	6a e0       	ldi	r22, 0x0A	; 10
 5a8:	70 e0       	ldi	r23, 0x00	; 0
 5aa:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__udivmodhi4>
 5ae:	eb 01       	movw	r28, r22
}
void LCD_num(unsigned int data)
{
unsigned int val;
dis_cmd(0x04);
	while(data!=0)
 5b0:	20 97       	sbiw	r28, 0x00	; 0
 5b2:	81 f7       	brne	.-32     	; 0x594 <LCD_num+0xe>
	{
		val=data%10;
		dis_data(val+48);
		data=data/10;
	}
dis_cmd(0x06);
 5b4:	86 e0       	ldi	r24, 0x06	; 6
 5b6:	0e 94 7b 00 	call	0xf6	; 0xf6 <dis_cmd>
} 
 5ba:	df 91       	pop	r29
 5bc:	cf 91       	pop	r28
 5be:	08 95       	ret

000005c0 <__udivmodhi4>:
 5c0:	aa 1b       	sub	r26, r26
 5c2:	bb 1b       	sub	r27, r27
 5c4:	51 e1       	ldi	r21, 0x11	; 17
 5c6:	07 c0       	rjmp	.+14     	; 0x5d6 <__udivmodhi4_ep>

000005c8 <__udivmodhi4_loop>:
 5c8:	aa 1f       	adc	r26, r26
 5ca:	bb 1f       	adc	r27, r27
 5cc:	a6 17       	cp	r26, r22
 5ce:	b7 07       	cpc	r27, r23
 5d0:	10 f0       	brcs	.+4      	; 0x5d6 <__udivmodhi4_ep>
 5d2:	a6 1b       	sub	r26, r22
 5d4:	b7 0b       	sbc	r27, r23

000005d6 <__udivmodhi4_ep>:
 5d6:	88 1f       	adc	r24, r24
 5d8:	99 1f       	adc	r25, r25
 5da:	5a 95       	dec	r21
 5dc:	a9 f7       	brne	.-22     	; 0x5c8 <__udivmodhi4_loop>
 5de:	80 95       	com	r24
 5e0:	90 95       	com	r25
 5e2:	bc 01       	movw	r22, r24
 5e4:	cd 01       	movw	r24, r26
 5e6:	08 95       	ret

000005e8 <_exit>:
 5e8:	f8 94       	cli

000005ea <__stop_program>:
 5ea:	ff cf       	rjmp	.-2      	; 0x5ea <__stop_program>
